"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""


def division():
    error = 'Выход из программы'
    try:
        a = int(input('Введите число: '))
        b = int(input('Введите число: '))
    except ValueError:
        print('Ошибка ввода')
        return error
    result = a / b
    return result


try:
    print(division())
except ZeroDivisionError:
    print('Деление на ноль')
"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, 
год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. 
Реализовать вывод данных о пользователе одной строкой.
"""


def user_data(name, surname, age, city, email, phone_number):
    result = f'{name} {surname} {age} года рождения, проживает в городе {city}. Email: {email} Номер телефона: {phone_number}'
    return result


name = input('Введите свое имя: ')
sur_name = input('Введите свою фамилию: ')
age = int(input('Введите свой год рождения: '))
city = input('Введите город проживания: ')
email = input('Введите свой email: ')
phone_number = input('Введите свой номер телефона: ')
print(user_data(name, sur_name, age, city, email, phone_number))
"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.
"""


def my_func(num_1, num_2, num_3):
    result = sum(l) - min(l)
    return result


l = [10, 20, 30]
print(my_func(*l))
"""
4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

"""


def my_func(x, y):
    # Через звездочки
    result = x ** y
    return result
    # Через не звездочки :)
    result = 1 / (x ** x)
    return result


x = 5
y = -5
print(my_func(x, y))
"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова 
нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. 
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел 
к полученной ранее сумме и после этого завершить программу.
"""


def string_numbers(*args):
    while True:
        if input('Для выхода из программы нажмите q, для продолжения - Enter: ').upper() == 'Q':
            break
        num = input('Введите строку чисел: ').split()
        new_num = []
        for new_el in num:
            new_num.append(int(new_el))
    res = sum(new_l) + sum(new_num)
    return res


l = input('Введите строку чисел: ').split()
new_l = []
for el in l:
    new_l.append(int(el))
print(sum(new_l))
print(string_numbers())
"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно 
начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
"""


def int_func(*args):
    word = input('Введите слово: ').lower()
    word = word.title()
    print(word)
    # return word
    list_words = input('Введите несколько слов: ').lower()
    list_words = list_words.title()
    return list_words


print(int_func())